# -*- sh -*-

declare -A AWS_ID

: ${AWS_BATCH:=4} ${AWS_PROFILE:=honorlock}
export AWS_BATCH AWS_PROFILE

function aws_inventory_profile () {
    AWS_PROFILE=${1-honorlock}
    eval "AWS_ID=($(ssm_honorlock.sh | while read host id
           do
               echo $SHELL | grep -q bash && echo [$host]=$id || echo $host $id
	   done
	  ))"
}

function aws_list_inventory_filter () {
    ([ "$SHELL" = "zsh" ] && echo "${(k)AWS_ID}" || echo "${!AWS_ID[@]}") | tr ' ' '\n' | sort | grep -Pe "${1-}"
}

function aws_push_ssh_public_key () {
    local pubs="$(cat ~/.ssh/id_*.pub)"
    for host in "$@"
    do
        (sleep 2; echo 'mkdir -p ~/.ssh'; sleep 1; echo grep "$USER@" '~/.ssh/authorized_keys' '||' echo "$pubs" '>> ~/.ssh/authorized_keys'; sleep 2
        ) | pty ssm_honorlock.sh $host &
    done
}

function aws_batch_filter_exec () {
    local FILTER=${1-}
    shift
    aws_list_inventory_filter "$FILTER" | xargs -P $AWS_BATCH -i ssh {} sudo -u ubuntu bash -c "'cd /var/www/html && $@'"
}

function aws_terminal_filter_exec () {
    local FILTER="${1-}"
    shift
    for host in $(aws_list_inventory_filter "$FILTER"); do ssh -t $host "$@"; done
}

function aws_screen_filter_exec () {
    local FILTER="${1-}"
    shift
    for host in $(aws_list_inventory_filter "$FILTER"); do screen -X screen -t $host ssh -t $host "$@"; done
}

aws_inventory_profile $AWS_PROFILE

true
