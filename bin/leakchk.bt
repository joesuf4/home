#!/usr/bin/env -S sudo -Es bpftrace

   /*  Within WSL2, the pid/tid numbers produced here won't match
    *  the external process PID (in ps -ef output, say), because
    *  of the way the HyperV "containerizes" your Ubuntu runtime(s).
    *  You're seeing the kernel's (global namespace) pid/tid in here.
    *
    *  Further, if you don't see "symbolized" output (from ustack),
    *  that's because your binaries were compiled with frame pointers
    *  omitted (FPO: the -fomit-frame-pointer compiler flag). Don't
    *  do that for code under active development.
    */

BEGIN
{
  printf("Hit Ctrl-C to generate the Leak Check report\n");
  @start = nsecs;
}

uprobe:/lib/x86_64-linux-gnu/libc.so.6:malloc
/arg1 > 0/
{
  @stack[pid, tid] = ustack(perf);
  @size[pid, tid, @stack[pid, tid]] = (uint32)arg1;
}

uprobe:/lib/x86_64-linux-gnu/libc.so.6:calloc
/arg1 > 0 && arg2 > 0/
{
  @stack[pid, tid] = ustack(perf);
  @size[pid, tid, @stack[pid, tid]] = (uint32)(arg1 * arg2);
}

uprobe:/lib/x86_64-linux-gnu/libc.so.6:realloc,
     uprobe:/lib/x86_64-linux-gnu/libc.so.6:mmap
     /arg2 > 0/
{
  @stack[pid, tid] = ustack(perf);
  @size[pid, tid, @stack[pid, tid]] = (uint32)arg2;
}

uretprobe:/lib/x86_64-linux-gnu/libc.so.6:malloc,
     uretprobe:/lib/x86_64-linux-gnu/libc.so.6:calloc,
     uretprobe:/lib/x86_64-linux-gnu/libc.so.6:realloc,
     uretprobe:/lib/x86_64-linux-gnu/libc.so.6:mmap
     /@size[pid, tid, @stack[pid, tid]] > 0/
{
  @st[comm, pid, retval] = @stack[pid, tid];
  @ms[comm, pid, retval] = (nsecs - @start) / 1000000;
  @[comm, pid, @ms[comm, pid, retval], @st[comm, pid, retval], retval] = @size[pid, tid, @stack[pid, tid]];
  delete(@size[pid, tid, @stack[pid, tid]]);
  delete(@stack[pid, tid]);
}

uprobe:/lib/x86_64-linux-gnu/libc.so.6:free,
     uprobe:/lib/x86_64-linux-gnu/libc.so.6:munmap
{
  delete(@[comm, pid, @ms[comm, pid, arg1], @st[comm, pid, arg1], arg1]);
  delete(@st[comm, pid, arg1]);
  delete(@ms[comm, pid, arg1]);
}

END
{
  clear(@size);
  clear(@stack);
  clear(@st);
  printf("Total duration in milliseconds: %lu\n", (nsecs - @start) / 1000000);
  clear(@start);
}
