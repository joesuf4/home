#!/usr/bin/env python3

import getpass
import os
import signal
import stat
import sys
import setproctitle

import socketserver as SocketServer

SOCKET = '%s/.pty-agent/socket' % os.getenv('HOME')

pw={}

class SecretsHandler(SocketServer.StreamRequestHandler):

    def handle(self):
        global pw
        for line in self.rfile:
            line = line.decode("utf-8")[:-1]
            if False: pass
            elif line.startswith('GET '):
                line = line[4:]
                if line in pw:
                    self.wfile.write((pw[line] + "\n").encode("utf-8"))
                else:
                    self.wfile.write("\n".encode("utf-8"))
            elif line.startswith('SET '):
                line = line[4:]
                idx = line.index(' ')
                pw[line[:idx]] = line[idx+1:]
            else: pass

def main():
    if os.path.exists(SOCKET) and stat.S_ISSOCK(os.stat(SOCKET).st_mode):
        os.unlink(SOCKET)

    # Sanity check permissions
    if os.stat(os.path.dirname(SOCKET)).st_mode & 0o7077:
        raise Exception("Insane permissions on '%s'" % SOCKET)

    # fork. parent runs a server, child runs argv[1:].
    def handler(signum, stackframe):
        pid, exit = os.wait()
        sys.exit(exit)
    server = SocketServer.UnixStreamServer(SOCKET, SecretsHandler)
    if os.fork(): # parent
        exit
    else: # child
        if os.fork():
            exit
        else:
            setproctitle.setproctitle("pty-agent")
            signal.signal(signal.SIGCHLD, handler)
            signal.signal(signal.SIGINT, signal.SIG_IGN)
            signal.signal(signal.SIGHUP, signal.SIG_IGN)
            server.serve_forever()

if __name__ == '__main__':
    main()
